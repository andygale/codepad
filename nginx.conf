events {
    worker_connections 1024;
}

http {
    upstream codecrush {
        server codecrush:3001;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    # Separate zone for OPTIONS requests (preflight) to avoid blocking CORS
    limit_req_zone $binary_remote_addr zone=cors:10m rate=20r/s;

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name interview-applications-sbx.tamg.cloud;

        # Health check endpoint (allow HTTP for load balancer health checks)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name interview-applications-sbx.tamg.cloud;

        # SSL configuration
        ssl_certificate /etc/ssl/certs/server.crt;
        ssl_certificate_key /etc/ssl/private/server.key;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # CORS preflight handling for all locations
        # This ensures OPTIONS requests are handled properly
        location ~* ^.+\.(OPTIONS)$ {
            limit_req zone=cors burst=10 nodelay;
            
            # Pass to Node.js application for proper CORS handling
            proxy_pass http://codecrush;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Ensure Origin header is preserved for CORS
            proxy_set_header Origin $http_origin;
            proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
            proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;
        }

        # WebSocket support for real-time collaboration
        location /socket.io/ {
            proxy_pass http://codecrush;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Preserve CORS headers for WebSocket
            proxy_set_header Origin $http_origin;
        }

        # API routes with rate limiting - OPTIONS requests handled separately above
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://codecrush;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Essential for session cookies to work properly through proxy
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            
            # Preserve CORS-related headers
            proxy_set_header Origin $http_origin;
            proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
            proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;
        }

        # Main application
        location / {
            proxy_pass http://codecrush;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Essential for session cookies to work properly through proxy
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            
            # Preserve CORS-related headers
            proxy_set_header Origin $http_origin;
            
            # Timeouts for long-running requests (code execution)
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
} 